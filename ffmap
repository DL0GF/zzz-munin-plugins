#!/usr/bin/perl -w

use strict;
use warnings;
use utf8;   # this script is written in utf8

use lib $ENV{'MUNIN_LIBDIR'};
use Munin::Plugin;

use Data::Dumper;
use JSON;
use LWP::Simple;

# data
my $nodes_ref;

# all nodes and clients
my $sum_clientcount  = 0;
my $node_count       = 0;
my $sum_online_nodes = 0;

# clients on specific nodes
# TODO  make this list available over config
my %node_id = (
    'c6:4a:00:fc:22:06' => 0,
    '12:fe:ed:2b:15:ae' => 0,
);

# firmware versions
my %firmware = ( 'undef' => 0 );

# TODO  make URL configurable
sub get_node_data {
    my $content = get('http://map.md.freifunk.net/nodes.json');
    die 'Could not get it!' unless defined $content;

    $nodes_ref = decode_json($content);
}

sub all_nodes_clients {
    foreach my $node ( @{ $nodes_ref->{'nodes'} } ) {
        if (!(     $node->{'flags'}->{'gateway'}
                || $node->{'flags'}->{'client'}
            )
        )
        {
            # number of online/offline nodes and client count
            $node_count++;
            $sum_clientcount += $node->{'clientcount'};
            if ( $node->{'flags'}->{'online'} ) { $sum_online_nodes++ }

            # firmware versions (this is not wanted for gateways and clients
            if ( defined $node->{'firmware'} ) {
                if ( exists( $firmware{ $node->{'firmware'} } ) ) {
                    $firmware{ $node->{'firmware'} }++;
                } else {
                    $firmware{ $node->{'firmware'} } = 0;
                }
            } else {
                $firmware{'undef'}++;
            }
        }
    }
}

sub personal_nodes_clients {
    foreach my $node ( @{ $nodes_ref->{'nodes'} } ) {
        foreach my $key ( keys %node_id ) {
            if ( $node->{'id'} eq $key ) {
                $node_id{ $key } = $node->{'clientcount'};
            }
        }
    }
}

# get all data
get_node_data();

# process all nodes/clients graph
all_nodes_clients();

# main
if ($ARGV[0] and $ARGV[0] eq "config") {
    print "multigraph ffmap_all_nodes\n";
    print "graph_title Freifunk Nodes and Clients\n";
    print "graph_args --base 1000 --lower-limit 0\n";
    print "graph_scale no\n";
    print "graph_category freifunk\n";
    print "graph_vlabel #\n";
    print "offline.label offline\n";
    print "offline.type GAUGE\n";
    print "offline.draw AREASTACK\n";
    print "offline.min 0\n";
    print "offline.colour COLOUR2\n";
    print "offline.info Number of offline nodes.\n";
    print "online.label online\n";
    print "online.type GAUGE\n";
    print "online.draw AREASTACK\n";
    print "online.min 0\n";
    print "online.colour COLOUR0\n";
    print "online.info Number of online nodes.\n";
    print "clients.label clients\n";
    print "clients.type GAUGE\n";
    print "clients.min 0\n";
    print "clients.colour COLOUR1\n";
    print "clients.info Sum of clients over all nodes.\n";

    print "multigraph ffmap_personal_nodes\n";
    print "graph_title Alex' Freifunk Knoten\n";
    print "graph_args --base 1000 --lower-limit 0\n";
    print "graph_scale no\n";
    print "graph_category freifunk\n";
    print "graph_vlabel Clients\n";
    print "balkonx.label balkonx\n";
    print "balkonx.draw AREASTACK\n";
    print "balkonx.min 0\n";
    print "balkony.label balkony\n";
    print "balkony.draw AREASTACK\n";
    print "balkony.min 0\n";

    print "multigraph ffmap_firmware_versions\n";
    print "graph_title Firmware Versions\n";
    print "graph_args --base 1000 --lower-limit 0\n";
    print "graph_scale no\n";
    print "graph_category freifunk\n";
    print "graph_vlabel Nodes\n";

    foreach my $key ( sort keys %firmware ) {
        my $fieldname = clean_fieldname( "v${key}" );
        print "${fieldname}.label ${key}\n";
        print "${fieldname}.draw AREASTACK\n";
        print "${fieldname}.min 0\n";
    }

    exit 0;
}

my $offline_nodes = $node_count - $sum_online_nodes;
print "multigraph ffmap_all_nodes\n";
print "online.value $sum_online_nodes\n";
print "offline.value $offline_nodes\n";
print "clients.value $sum_clientcount\n";

# process personal nodes/clients graph
personal_nodes_clients();
print "multigraph ffmap_personal_nodes\n";
print "balkony.value $node_id{'c6:4a:00:fc:22:06'}\n";
print "balkonx.value $node_id{'12:fe:ed:2b:15:ae'}\n";

# firmware
print "multigraph ffmap_firmware_versions\n";
foreach my $key ( sort keys %firmware ) {
    my $fieldname = clean_fieldname( "v${key}" );
    print "${fieldname}.value " . ${firmware}{$key} . "\n";
}

# vim: set ft=perl et sts=0 ts=4 sw=4 sr:
